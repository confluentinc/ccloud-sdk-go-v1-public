// Code generated by mocker. DO NOT EDIT.
// github.com/travisjeffery/mocker
// Source: interfaces.go

package mock

import (
	context "context"
	sync "sync"

	github_com_confluentinc_ccloud_sdk_go_v1_public_ccloud "github.com/confluentinc/ccloud-sdk-go-v1-public/ccloud"
)

// LoginRealm is a mock of LoginRealm interface
type LoginRealm struct {
	lockLoginRealm sync.Mutex
	LoginRealmFunc func(arg0 context.Context, arg1 *github_com_confluentinc_ccloud_sdk_go_v1_public_ccloud.GetLoginRealmRequest) (*github_com_confluentinc_ccloud_sdk_go_v1_public_ccloud.GetLoginRealmReply, error)

	calls struct {
		LoginRealm []struct {
			Arg0 context.Context
			Arg1 *github_com_confluentinc_ccloud_sdk_go_v1_public_ccloud.GetLoginRealmRequest
		}
	}
}

// LoginRealm mocks base method by wrapping the associated func.
func (m *LoginRealm) LoginRealm(arg0 context.Context, arg1 *github_com_confluentinc_ccloud_sdk_go_v1_public_ccloud.GetLoginRealmRequest) (*github_com_confluentinc_ccloud_sdk_go_v1_public_ccloud.GetLoginRealmReply, error) {
	m.lockLoginRealm.Lock()
	defer m.lockLoginRealm.Unlock()

	if m.LoginRealmFunc == nil {
		panic("mocker: LoginRealm.LoginRealmFunc is nil but LoginRealm.LoginRealm was called.")
	}

	call := struct {
		Arg0 context.Context
		Arg1 *github_com_confluentinc_ccloud_sdk_go_v1_public_ccloud.GetLoginRealmRequest
	}{
		Arg0: arg0,
		Arg1: arg1,
	}

	m.calls.LoginRealm = append(m.calls.LoginRealm, call)

	return m.LoginRealmFunc(arg0, arg1)
}

// LoginRealmCalled returns true if LoginRealm was called at least once.
func (m *LoginRealm) LoginRealmCalled() bool {
	m.lockLoginRealm.Lock()
	defer m.lockLoginRealm.Unlock()

	return len(m.calls.LoginRealm) > 0
}

// LoginRealmCalls returns the calls made to LoginRealm.
func (m *LoginRealm) LoginRealmCalls() []struct {
	Arg0 context.Context
	Arg1 *github_com_confluentinc_ccloud_sdk_go_v1_public_ccloud.GetLoginRealmRequest
} {
	m.lockLoginRealm.Lock()
	defer m.lockLoginRealm.Unlock()

	return m.calls.LoginRealm
}

// Reset resets the calls made to the mocked methods.
func (m *LoginRealm) Reset() {
	m.lockLoginRealm.Lock()
	m.calls.LoginRealm = nil
	m.lockLoginRealm.Unlock()
}
